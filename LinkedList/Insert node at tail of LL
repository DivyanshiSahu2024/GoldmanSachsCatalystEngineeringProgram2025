https://www.hackerrank.com/challenges/insert-a-node-at-the-tail-of-a-linked-list/problem

import java.io.*;
import java.util.*;
 
class SinglyLinkedListNode {
    int data;
    SinglyLinkedListNode next;
 
    SinglyLinkedListNode(int data) {
        this.data = data;
        this.next = null;
    }
}
 
class SinglyLinkedList {
    SinglyLinkedListNode head;
 
    SinglyLinkedList() {
        this.head = null;
    }
}
 
public class Solution {
 
    static SinglyLinkedListNode insertNodeAtTail(SinglyLinkedListNode head, int data) {
        SinglyLinkedListNode newNode = new SinglyLinkedListNode(data);
 
        if (head == null) {
            return newNode;
        }
 
        SinglyLinkedListNode current = head;
        while (current.next != null) {
            current = current.next;
        }
 
        current.next = newNode;
        return head;
    }
 
    static void printLinkedList(SinglyLinkedListNode head) {
        SinglyLinkedListNode current = head;
        while (current != null) {
            System.out.println(current.data);
            current = current.next;
        }
    }
 
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new OutputStreamWriter(System.out));
 
        SinglyLinkedList llist = new SinglyLinkedList();
 
        int llistCount = Integer.parseInt(bufferedReader.readLine().trim());
 
        for (int i = 0; i < llistCount; i++) {
            int llistItem = Integer.parseInt(bufferedReader.readLine().trim());
            SinglyLinkedListNode llist_head = insertNodeAtTail(llist.head, llistItem);
            llist.head = llist_head;
        }
 
        printLinkedList(llist.head);
 
        bufferedReader.close();
    }
}
